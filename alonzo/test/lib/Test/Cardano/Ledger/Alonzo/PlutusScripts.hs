-- | This file is generated by plutus-preprocessor/src/Main.hs
module Test.Cardano.Ledger.Alonzo.PlutusScripts where

import Cardano.Ledger.Alonzo.Scripts (Script (..))
import Data.ByteString.Short (pack)

{- Preproceesed Plutus Script
guessTheNumber'2_0 :: PlutusCore.Data.Data ->
                      PlutusCore.Data.Data -> ()
guessTheNumber'2_0 d1_1 d2_2 = if d1_1 PlutusTx.Eq.== d2_2
                                then GHC.Tuple.()
                                else PlutusTx.Builtins.error GHC.Tuple.()
-}

guessTheNumber2 :: Script era
guessTheNumber2 =
  (PlutusScript . pack . concat)
    [ [89, 2, 50, 1, 0, 0, 50, 50, 50, 51, 50, 34, 51, 50, 34],
      [51, 34, 50, 50, 50, 50, 51, 34, 51, 51, 51, 34, 34, 34, 50],
      [50, 50, 50, 50, 50, 50, 0, 18, 35, 51, 83, 1, 115, 51, 80],
      [5, 48, 7, 18, 0, 16, 2, 0, 18, 1, 114, 53, 0, 64, 23],
      [1, 97, 35, 80, 2, 53, 48, 19, 0, 20, 152, 73, 132, 128, 4],
      [212, 0, 136, 128, 4, 212, 0, 72, 128, 8, 213, 85, 64, 88, 72],
      [136, 204, 0, 200, 136, 204, 204, 212, 192, 28, 0, 136, 204, 204, 205],
      [76, 2, 0, 8, 136, 204, 4, 192, 12, 0, 136, 136, 6, 136, 128],
      [100, 136, 6, 72, 128, 100, 5, 72, 140, 204, 204, 212, 192, 36, 0],
      [200, 128, 104, 136, 140, 205, 76, 6, 140, 205, 92, 169, 155, 137, 0],
      [80, 3, 1, 192, 27, 35, 51, 83, 1, 113, 32, 1, 48, 11, 18],
      [0, 16, 5, 0, 50, 1, 192, 25, 34, 1, 162, 32, 26, 34, 1],
      [160, 22, 35, 51, 51, 53, 48, 8, 0, 34, 32, 25, 34, 32, 26],
      [34, 51, 1, 32, 3, 0, 34, 32, 25, 34, 1, 144, 21, 35, 51],
      [51, 53, 48, 8, 0, 34, 32, 25, 34, 32, 26, 34, 1, 146, 35],
      [51, 83, 1, 65, 32, 1, 48, 8, 18, 0, 16, 3, 0, 34, 32],
      [25, 1, 82, 51, 51, 51, 83, 0, 128, 2, 34, 1, 146, 34, 1],
      [162, 32, 25, 34, 1, 146, 35, 51, 83, 1, 65, 32, 1, 0, 112],
      [3, 0, 32, 21, 34, 53, 53, 80, 12, 0, 34, 35, 83, 85, 0],
      [224, 3, 34, 51, 53, 48, 24, 51, 48, 8, 18, 0, 16, 4, 0],
      [34, 51, 48, 9, 18, 0, 16, 4, 0, 34, 1, 160, 23, 33, 34],
      [34, 35, 0, 80, 6, 34, 18, 34, 34, 51, 0, 64, 7, 0, 98],
      [18, 34, 34, 48, 3, 0, 98, 18, 34, 34, 48, 2, 0, 98, 18],
      [34, 34, 48, 1, 0, 98, 0, 17, 18, 33, 35, 48, 1, 0, 48],
      [2, 17, 32, 1, 34, 51, 53, 114, 166, 110, 36, 0, 128, 4, 2],
      [128, 36, 136, 204, 213, 202, 153, 185, 0, 2, 0, 16, 9, 0, 131],
      [80, 1, 32, 1, 18, 48, 1, 53, 80, 10, 34, 18, 34, 51, 53],
      [53, 0, 192, 2, 35, 51, 83, 80, 13, 0, 34, 0, 210, 34, 0],
      [224, 9, 34, 35, 51, 83, 80, 15, 0, 66, 0, 226, 34, 51, 53],
      [48, 15, 51, 0, 144, 6, 0, 50, 51, 53, 48, 12, 18, 0, 16],
      [10, 0, 96, 3, 32, 17, 0, 224, 11, 0, 129, 32, 1, 32, 1],
      [18, 32, 2, 18, 32, 1, 32, 1, 17, 34, 0, 33, 34, 18, 35],
      [48, 1, 0, 64, 3, 18, 0, 17, 18, 50, 48, 1, 0, 18, 35],
      [48, 3, 50, 48, 1, 0, 16, 2, 0, 17, 17, 18, 51, 80, 2],
      [33, 35, 48, 1, 35, 80, 3, 34, 48, 2, 0, 50, 53, 0, 50],
      [35, 0, 16, 3, 0, 17, 35, 35, 35, 0, 16, 1, 34, 51, 0],
      [51, 35, 0, 16, 1, 0, 32, 1, 34, 18, 53, 48, 4, 18, 53],
      [48, 4, 0, 51, 80, 3, 0, 16, 1, 1]
    ]

{- Preproceesed Plutus Script
guessTheNumber'3_0 :: PlutusCore.Data.Data ->
                      PlutusCore.Data.Data -> PlutusCore.Data.Data -> ()
guessTheNumber'3_0 d1_1 d2_2 _d3_3 = if d1_1 PlutusTx.Eq.== d2_2
                                      then GHC.Tuple.()
                                      else PlutusTx.Builtins.error GHC.Tuple.()
-}

guessTheNumber3 :: Script era
guessTheNumber3 =
  (PlutusScript . pack . concat)
    [ [89, 2, 50, 1, 0, 0, 50, 50, 50, 51, 50, 34, 51, 50, 34],
      [51, 34, 50, 50, 50, 50, 51, 34, 51, 51, 51, 34, 34, 34, 50],
      [50, 50, 50, 50, 50, 50, 0, 18, 34, 51, 53, 48, 24, 51, 53],
      [0, 99, 0, 129, 32, 1, 0, 48, 2, 32, 24, 35, 80, 5, 1],
      [128, 23, 18, 53, 0, 35, 83, 1, 48, 1, 73, 132, 152, 72, 0],
      [77, 64, 8, 136, 0, 77, 64, 4, 136, 0, 141, 85, 84, 5, 132],
      [136, 140, 192, 12, 136, 140, 204, 205, 76, 1, 192, 8, 140, 204, 204],
      [212, 192, 32, 0, 136, 140, 192, 76, 0, 192, 8, 136, 128, 104, 136],
      [6, 72, 128, 100, 136, 6, 64, 84, 136, 204, 204, 205, 76, 2, 64],
      [12, 136, 6, 136, 136, 204, 212, 192, 104, 204, 213, 202, 153, 184, 144],
      [5, 0, 48, 28, 1, 178, 51, 53, 48, 23, 18, 0, 19, 0, 177],
      [32, 1, 0, 80, 3, 32, 28, 1, 146, 32, 26, 34, 1, 162, 32],
      [26, 1, 98, 51, 51, 51, 83, 0, 128, 2, 34, 1, 146, 34, 1],
      [162, 35, 48, 18, 0, 48, 2, 34, 1, 146, 32, 25, 1, 82, 51],
      [51, 51, 83, 0, 128, 2, 34, 1, 146, 34, 1, 162, 32, 25, 34],
      [51, 53, 48, 20, 18, 0, 19, 0, 129, 32, 1, 0, 48, 2, 34],
      [1, 144, 21, 35, 51, 51, 53, 48, 8, 0, 34, 32, 25, 34, 32],
      [26, 34, 1, 146, 32, 25, 34, 51, 53, 48, 20, 18, 0, 16, 7],
      [0, 48, 2, 1, 82, 35, 83, 85, 0, 192, 2, 34, 53, 53, 80],
      [14, 0, 50, 35, 51, 83, 1, 131, 51, 0, 129, 32, 1, 0, 64],
      [2, 35, 51, 0, 145, 32, 1, 0, 64, 2, 32, 26, 1, 114, 18],
      [34, 34, 48, 5, 0, 98, 33, 34, 34, 35, 48, 4, 0, 112, 6],
      [33, 34, 34, 35, 0, 48, 6, 33, 34, 34, 35, 0, 32, 6, 33],
      [34, 34, 35, 0, 16, 6, 32, 1, 17, 34, 18, 51, 0, 16, 3],
      [0, 33, 18, 0, 18, 35, 51, 87, 42, 102, 226, 64, 8, 0, 64],
      [40, 2, 72, 140, 205, 92, 169, 155, 144, 0, 32, 1, 0, 144, 8],
      [53, 0, 18, 0, 17, 35, 0, 19, 85, 0, 162, 33, 34, 35, 51],
      [83, 80, 12, 0, 34, 51, 53, 53, 0, 208, 2, 32, 13, 34, 32],
      [14, 0, 146, 34, 51, 53, 53, 0, 240, 4, 32, 14, 34, 35, 51],
      [83, 0, 243, 48, 9, 0, 96, 3, 35, 51, 83, 0, 193, 32, 1],
      [0, 160, 6, 0, 50, 1, 16, 14, 0, 176, 8, 18, 0, 18, 0],
      [17, 34, 0, 33, 34, 0, 18, 0, 17, 18, 32, 2, 18, 33, 34],
      [51, 0, 16, 4, 0, 49, 32, 1, 17, 35, 35, 0, 16, 1, 34],
      [51, 0, 51, 35, 0, 16, 1, 0, 32, 1, 17, 17, 35, 53, 0],
      [34, 18, 51, 0, 18, 53, 0, 50, 35, 0, 32, 3, 35, 80, 3],
      [34, 48, 1, 0, 48, 1, 18, 50, 50, 48, 1, 0, 18, 35, 48],
      [3, 50, 48, 1, 0, 16, 2, 0, 18, 33, 35, 83, 0, 65, 35],
      [83, 0, 64, 3, 53, 0, 48, 1, 0, 17]
    ]

{- Preproceesed Plutus Script
evendata'_0 :: PlutusCore.Data.Data ->
               PlutusCore.Data.Data -> PlutusCore.Data.Data -> ()
evendata'_0 (PlutusCore.Data.I n_1) _d2_2 _d3_3 = if PlutusTx.Prelude.modulo n_1 2 PlutusTx.Eq.== 0
                                                   then GHC.Tuple.()
                                                   else PlutusTx.Builtins.error GHC.Tuple.()
-}

evendata3 :: Script era
evendata3 =
  (PlutusScript . pack . concat)
    [ [88, 180, 1, 0, 0, 51, 50, 34, 50, 50, 51, 34, 51, 50, 34],
      [51, 51, 51, 34, 34, 34, 50, 51, 34, 50, 50, 50, 0, 18, 34],
      [51, 51, 51, 83, 0, 144, 3, 34, 98, 34, 98, 35, 51, 83, 1],
      [131, 51, 80, 22, 1, 115, 48, 6, 0, 36, 128, 17, 32, 0, 32],
      [10, 35, 80, 8, 0, 160, 9, 34, 98, 38, 0, 114, 35, 55, 36],
      [0, 64, 2, 36, 106, 0, 134, 166, 0, 64, 2, 147, 9, 0, 9],
      [0, 8, 147, 16, 145, 17, 17, 128, 40, 3, 17, 9, 17, 17, 25],
      [128, 32, 3, 128, 49, 9, 17, 17, 24, 1, 128, 49, 9, 17, 17],
      [24, 1, 0, 49, 9, 17, 17, 24, 0, 128, 49, 0, 8, 137, 16],
      [1, 9, 16, 145, 25, 128, 8, 2, 0, 24, 144, 0, 136, 145, 9],
      [25, 128, 8, 1, 128, 16, 137, 0, 8, 144, 0, 145, 25, 154, 185],
      [83, 55, 18, 0, 64, 2, 0, 160, 8, 36, 64, 4, 36, 64, 2],
      [64, 3]
    ]

{- Preproceesed Plutus Script
odddata'_0 :: PlutusCore.Data.Data ->
              PlutusCore.Data.Data -> PlutusCore.Data.Data -> ()
odddata'_0 (PlutusCore.Data.I n_1) _d2_2 _d3_3 = if PlutusTx.Prelude.modulo n_1 2 PlutusTx.Eq.== 1
                                                  then GHC.Tuple.()
                                                  else PlutusTx.Builtins.error GHC.Tuple.()
-}

odddata3 :: Script era
odddata3 =
  (PlutusScript . pack . concat)
    [ [88, 180, 1, 0, 0, 51, 50, 34, 50, 50, 51, 34, 51, 50, 34],
      [51, 51, 51, 34, 34, 34, 50, 51, 34, 50, 50, 50, 0, 18, 34],
      [51, 51, 51, 83, 0, 144, 3, 34, 98, 34, 98, 35, 51, 83, 1],
      [131, 51, 80, 22, 1, 115, 48, 6, 0, 36, 128, 17, 32, 2, 32],
      [10, 35, 80, 8, 0, 160, 9, 34, 98, 38, 0, 114, 35, 55, 36],
      [0, 64, 2, 36, 106, 0, 134, 166, 0, 64, 2, 147, 9, 0, 9],
      [0, 8, 147, 16, 145, 17, 17, 128, 40, 3, 17, 9, 17, 17, 25],
      [128, 32, 3, 128, 49, 9, 17, 17, 24, 1, 128, 49, 9, 17, 17],
      [24, 1, 0, 49, 9, 17, 17, 24, 0, 128, 49, 0, 8, 137, 16],
      [1, 9, 16, 145, 25, 128, 8, 2, 0, 24, 144, 0, 136, 145, 9],
      [25, 128, 8, 1, 128, 16, 137, 0, 8, 144, 0, 145, 25, 154, 185],
      [83, 55, 18, 0, 64, 2, 0, 160, 8, 36, 64, 4, 36, 64, 2],
      [64, 3]
    ]

{- Preproceesed Plutus Script
evenRedeemer'_0 :: PlutusCore.Data.Data ->
                   PlutusCore.Data.Data -> PlutusCore.Data.Data -> ()
evenRedeemer'_0 _d1_1 (PlutusCore.Data.I n_2) _d3_3 = if PlutusTx.Prelude.modulo n_2 2 PlutusTx.Eq.== 0
                                                       then GHC.Tuple.()
                                                       else PlutusTx.Builtins.error GHC.Tuple.()
-}

evenRedeemer3 :: Script era
evenRedeemer3 =
  (PlutusScript . pack . concat)
    [ [88, 180, 1, 0, 0, 51, 50, 34, 50, 50, 51, 34, 51, 50, 34],
      [51, 51, 51, 34, 34, 34, 50, 51, 34, 50, 50, 50, 0, 18, 34],
      [51, 51, 51, 83, 0, 144, 2, 34, 98, 34, 98, 35, 51, 83, 1],
      [131, 51, 80, 22, 1, 115, 48, 6, 0, 36, 128, 17, 32, 0, 32],
      [10, 35, 80, 8, 0, 160, 9, 34, 98, 38, 0, 114, 35, 55, 36],
      [0, 64, 2, 36, 106, 0, 134, 166, 0, 64, 2, 147, 9, 0, 9],
      [0, 8, 147, 16, 145, 17, 17, 128, 40, 3, 17, 9, 17, 17, 25],
      [128, 32, 3, 128, 49, 9, 17, 17, 24, 1, 128, 49, 9, 17, 17],
      [24, 1, 0, 49, 9, 17, 17, 24, 0, 128, 49, 0, 8, 137, 16],
      [1, 9, 16, 145, 25, 128, 8, 2, 0, 24, 144, 0, 136, 145, 9],
      [25, 128, 8, 1, 128, 16, 137, 0, 8, 144, 0, 145, 25, 154, 185],
      [83, 55, 18, 0, 64, 2, 0, 160, 8, 36, 64, 4, 36, 64, 2],
      [64, 3]
    ]

{- Preproceesed Plutus Script
oddRedeemer'_0 :: PlutusCore.Data.Data ->
                  PlutusCore.Data.Data -> PlutusCore.Data.Data -> ()
oddRedeemer'_0 _d1_1 (PlutusCore.Data.I n_2) _d3_3 = if PlutusTx.Prelude.modulo n_2 2 PlutusTx.Eq.== 1
                                                      then GHC.Tuple.()
                                                      else PlutusTx.Builtins.error GHC.Tuple.()
-}

oddRedeemer3 :: Script era
oddRedeemer3 =
  (PlutusScript . pack . concat)
    [ [88, 180, 1, 0, 0, 51, 50, 34, 50, 50, 51, 34, 51, 50, 34],
      [51, 51, 51, 34, 34, 34, 50, 51, 34, 50, 50, 50, 0, 18, 34],
      [51, 51, 51, 83, 0, 144, 2, 34, 98, 34, 98, 35, 51, 83, 1],
      [131, 51, 80, 22, 1, 115, 48, 6, 0, 36, 128, 17, 32, 2, 32],
      [10, 35, 80, 8, 0, 160, 9, 34, 98, 38, 0, 114, 35, 55, 36],
      [0, 64, 2, 36, 106, 0, 134, 166, 0, 64, 2, 147, 9, 0, 9],
      [0, 8, 147, 16, 145, 17, 17, 128, 40, 3, 17, 9, 17, 17, 25],
      [128, 32, 3, 128, 49, 9, 17, 17, 24, 1, 128, 49, 9, 17, 17],
      [24, 1, 0, 49, 9, 17, 17, 24, 0, 128, 49, 0, 8, 137, 16],
      [1, 9, 16, 145, 25, 128, 8, 2, 0, 24, 144, 0, 136, 145, 9],
      [25, 128, 8, 1, 128, 16, 137, 0, 8, 144, 0, 145, 25, 154, 185],
      [83, 55, 18, 0, 64, 2, 0, 160, 8, 36, 64, 4, 36, 64, 2],
      [64, 3]
    ]

{- Preproceesed Plutus Script
sumsTo10'_0 :: PlutusCore.Data.Data ->
               PlutusCore.Data.Data -> PlutusCore.Data.Data -> ()
sumsTo10'_0 (PlutusCore.Data.I m_1) (PlutusCore.Data.I n_2) _d3_3 = if (m_1 PlutusTx.Numeric.+ n_2) PlutusTx.Eq.== 10
                                                                     then GHC.Tuple.()
                                                                     else PlutusTx.Builtins.error GHC.Tuple.()
-}

sumsTo103 :: Script era
sumsTo103 =
  (PlutusScript . pack . concat)
    [ [88, 224, 1, 0, 0, 51, 34, 50, 51, 50, 34, 50, 50, 50, 51],
      [34, 51, 50, 34, 51, 51, 51, 34, 34, 34, 50, 50, 50, 0, 18],
      [34, 50, 51, 51, 51, 83, 0, 112, 4, 34, 48, 3, 22, 34, 35],
      [0, 65, 98, 35, 51, 51, 53, 48, 9, 0, 82, 35, 0, 81, 98],
      [34, 48, 6, 22, 34, 51, 53, 48, 25, 51, 53, 1, 96, 24, 51],
      [53, 1, 112, 28, 0, 64, 2, 72, 5, 8, 7, 200, 212, 2, 128],
      [124, 7, 136, 140, 1, 69, 136, 140, 1, 69, 128, 112, 136, 192, 12],
      [88, 136, 192, 12, 88, 6, 137, 132, 141, 64, 8, 212, 192, 84, 0],
      [82, 97, 38, 33, 34, 34, 35, 0, 80, 6, 34, 18, 34, 34, 51],
      [0, 64, 7, 0, 98, 18, 34, 34, 48, 3, 0, 98, 18, 34, 34],
      [48, 2, 0, 98, 18, 34, 34, 48, 1, 0, 98, 0, 17, 18, 32],
      [2, 18, 33, 34, 51, 0, 16, 4, 0, 49, 32, 1, 17, 34, 18],
      [51, 0, 16, 3, 0, 33, 18, 0, 17, 32, 1, 18, 0, 18, 35],
      [51, 87, 42, 102, 226, 64, 8, 0, 64, 20, 1, 4, 136, 0, 132],
      [136, 0, 72, 0, 72, 140, 220, 0, 1, 0, 8, 144, 0, 144, 0],
      [129]
    ]
