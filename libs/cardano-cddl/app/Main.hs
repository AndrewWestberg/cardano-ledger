module Main where

import Codec.CBOR.Cuddle.CDDL (sortCDDL)
import Codec.CBOR.Cuddle.Huddle (Huddle, toCDDL)
import Codec.CBOR.Cuddle.Pretty ()
import Data.Foldable (for_)
import Prettyprinter (Pretty (pretty))
import Prettyprinter.Render.Text (hPutDoc)
import System.IO (IOMode (..), hPutStrLn, withFile)
import qualified Test.Cardano.Ledger.Conway.CDDL as Conway

-- | Message to be appended to the top of every generated file
preface :: String
preface =
  "; This file was auto-generated by cuddle-cddl. Please do not modify it directly!"

-- | Map from spec to the CDDL file location
cuddleSpecs :: [(Huddle, String)]
cuddleSpecs =
  [ (Conway.conway, "./eras/conway/impl/cddl-files/conway.cddl")
  ]

writeSpec :: Huddle -> String -> IO ()
writeSpec hddl path =
  let cddl = toCDDL hddl
   in withFile path WriteMode $ \h -> do
        hPutStrLn h preface
        hPutDoc h (pretty $ sortCDDL cddl)
        -- Write an empty line at the end of the file
        hPutStrLn h ""

-- Generate cddl files for all relevant specifications
main :: IO ()
main = for_ cuddleSpecs (uncurry writeSpec)
